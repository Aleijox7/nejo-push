imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en

framework:
    #esi: ~
    translator: { fallbacks: ['%locale%'] }
    secret: '%secret%'
    router:
        resource: '%kernel.project_dir%/app/config/routing.yml'
        strict_requirements: ~
    form: ~
    csrf_protection: ~
    validation: { enable_annotations: true }
    serializer: { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale: '%locale%'
    trusted_hosts: ~
    session:
        # https://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id: session.handler.native_file
        save_path: '%kernel.project_dir%/var/sessions/%kernel.environment%'
    fragments: ~
    http_method_override: true
    assets: ~
    php_errors:
        log: true

# Twig Configuration
twig:
    debug: '%kernel.debug%'
    strict_variables: '%kernel.debug%'
    cache: false
    globals:
        colorPrincial: "#ff0052"
        vapid_public_key: "%vapid_public_key%"
        push_api_key: "%push_api_key%"

# Doctrine Configuration
doctrine:
    dbal:
        driver: pdo_mysql
        host: '%database_host%'
        port: '%database_port%'
        dbname: '%database_name%'
        user: '%database_user%'
        password: '%database_password%'
        charset: UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: '%kernel.project_dir%/var/data/data.sqlite'
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #path: '%database_path%'

    orm:
        auto_generate_proxy_classes: '%kernel.debug%'
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: '%mailer_transport%'
    host: '%mailer_host%'
    username: '%mailer_user%'
    password: '%mailer_password%'
    spool: { type: memory }
    
fos_rest:
    format_listener:
        enabled: true
        rules:
            - { path: '^/push/*', priorities: ['json', 'xml'], fallback_format: json, prefer_extension: false }
            - { path: '^/', stop: true }
    view:
        view_response_listener: force
        #exception_wrapper_handler: IP\RestBundle\Handler\FosExceptionWrapperHandler
    exception:
        enabled: false

minishlink_web_push:
    api_keys:                       # you should put api keys in your "app/config/parameters.yml" file
        GCM: 'AIzaSyAaU1CvybsVJ0OUEOQ0EJHF72vGSlWht00'
    VAPID:
        subject: http://localhost/git/pushNotification/web/ # can be an URL or a mailto:
        publicKey: BG-mevRODxstsFoBcmsESt1_2wP5WEtxCUb8uPCC4nkIIl4Dj1RPLgzWsx1zQp75YqGFuJUyJdwNVJgSD2REQE4          # uncompressed public key P-256 encoded in Base64-URL
        privateKey: zquOfxk1R9-0EI17PVFHIHwESjsEMSREduC_2vu2R3k         # the secret multiplier of the private key encoded in Base64-URL
        pemFile: ''          # if you have a PEM file and can link to it on your filesystem
        pem: ''           # if you have a PEM file and want to hardcode its content
    ttl: 2419200                    # Time to Live of notifications in seconds
    urgency: normal                      # can be very-low / low / normal / high
    topic: ~                        # default identifier for your notifications
    timeout: 30                     # Timeout of each request in seconds
    automatic_padding: true         # pad messages automatically for better security (against more bandwith usage)